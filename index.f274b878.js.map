{"mappings":"ACIA,MAAM,EAAa,MAAO,EAAU,KAChC,GAAI,CACA,IAAM,EAAW,MAAM,MAJhB,kCAI8B,CACjC,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,CAAE,SAAA,EAAU,SAAA,CAAS,EAC9C,GAEA,GAAI,CAAC,EAAS,EAAE,CAAE,CACd,IAAM,EAAe,MAAM,EAAS,IAAI,EACxC,OAAM,AAAI,MAAM,EACpB,CAEA,IAAM,EAAO,MAAM,EAAS,IAAI,GAChC,QAAQ,GAAG,CAAC,EAAK,OAAO,CAC5B,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,sCAAuC,EACzD,CACJ,EAIA,AADuB,SAAS,cAAc,CAAC,kBAChC,gBAAgB,CAAC,QAAS,KAGrC,EAFiB,SAAS,cAAc,CAAC,YAAY,KAAK,CACzC,SAAS,cAAc,CAAC,YAAY,KAAK,CAE9D,GAIA,MAAM,EAAa,IACR,AAAqC,SAArC,aAAa,OAAO,CAAC,YAwB1B,EAAgB,KAClB,SAAS,cAAc,CAAC,aAAa,KAAK,CAAC,OAAO,CAAG,QACrD,SAAS,cAAc,CAAC,aAAa,KAAK,CAAC,OAAO,CAAG,MACzD,EAGM,EAAgB,KAClB,SAAS,cAAc,CAAC,aAAa,KAAK,CAAC,OAAO,CAAG,OACrD,SAAS,cAAc,CAAC,aAAa,KAAK,CAAC,OAAO,CAAG,OACzD,CAGA,CAAA,OAAO,MAAM,CAAG,KACR,IACA,IAEA,GAER","sources":["<anon>","script.js"],"sourcesContent":["// script.js\nconst apiUrl = 'http://localhost:3000/api/users';\nconst createUser = async (username, password)=>{\n    try {\n        const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                password\n            })\n        });\n        if (!response.ok) {\n            const errorMessage = await response.text();\n            throw new Error(errorMessage);\n        }\n        const data = await response.json();\n        console.log(data.message); // Komunikat z serwera\n    } catch (error) {\n        console.error(\"B\\u0142\\u0105d podczas tworzenia u\\u017Cytkownika:\", error);\n    }\n};\n// Wywołanie funkcji createUser() po kliknięciu przycisku \"Zarejestruj\"\nconst registerButton = document.getElementById('registerButton');\nregisterButton.addEventListener('click', ()=>{\n    const username = document.getElementById('username').value;\n    const password = document.getElementById('password').value;\n    createUser(username, password);\n});\n// Sprawdzanie stanu zalogowania (można przechowywać w Local Storage)\nconst isLoggedIn = ()=>{\n    return localStorage.getItem('loggedIn') === 'true';\n};\n// Logowanie\nconst login = ()=>{\n    const username = document.getElementById('username').value;\n    const password = document.getElementById('password').value;\n    // Tutaj można dodać logikę walidacji użytkownika\n    if (username === 'admin' && password === 'password') {\n        localStorage.setItem('loggedIn', 'true');\n        showDashboard();\n    } else alert(\"Nieprawid\\u0142owa nazwa u\\u017Cytkownika lub has\\u0142o.\");\n};\n// Wylogowywanie\nconst logout = ()=>{\n    localStorage.removeItem('loggedIn');\n    showLoginPage();\n};\n// Pokaż ekran logowania\nconst showLoginPage = ()=>{\n    document.getElementById('loginPage').style.display = 'block';\n    document.getElementById('dashboard').style.display = 'none';\n};\n// Pokaż główny dashboard\nconst showDashboard = ()=>{\n    document.getElementById('loginPage').style.display = 'none';\n    document.getElementById('dashboard').style.display = 'block';\n};\n// Sprawdź stan zalogowania przy załadowaniu strony\nwindow.onload = ()=>{\n    if (isLoggedIn()) showDashboard();\n    else showLoginPage();\n};\n\n//# sourceMappingURL=index.f274b878.js.map\n","// script.js\r\n\r\nconst apiUrl = 'http://localhost:3000/api/users';\r\n\r\nconst createUser = async (username, password) => {\r\n    try {\r\n        const response = await fetch(apiUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ username, password })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorMessage = await response.text();\r\n            throw new Error(errorMessage);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(data.message); // Komunikat z serwera\r\n    } catch (error) {\r\n        console.error('Błąd podczas tworzenia użytkownika:', error);\r\n    }\r\n};\r\n\r\n// Wywołanie funkcji createUser() po kliknięciu przycisku \"Zarejestruj\"\r\nconst registerButton = document.getElementById('registerButton');\r\nregisterButton.addEventListener('click', () => {\r\n    const username = document.getElementById('username').value;\r\n    const password = document.getElementById('password').value;\r\n    createUser(username, password);\r\n});\r\n\r\n\r\n// Sprawdzanie stanu zalogowania (można przechowywać w Local Storage)\r\nconst isLoggedIn = () => {\r\n    return localStorage.getItem('loggedIn') === 'true';\r\n};\r\n\r\n// Logowanie\r\nconst login = () => {\r\n    const username = document.getElementById('username').value;\r\n    const password = document.getElementById('password').value;\r\n\r\n    // Tutaj można dodać logikę walidacji użytkownika\r\n    if (username === 'admin' && password === 'password') {\r\n        localStorage.setItem('loggedIn', 'true');\r\n        showDashboard();\r\n    } else {\r\n        alert('Nieprawidłowa nazwa użytkownika lub hasło.');\r\n    }\r\n};\r\n\r\n// Wylogowywanie\r\nconst logout = () => {\r\n    localStorage.removeItem('loggedIn');\r\n    showLoginPage();\r\n};\r\n\r\n// Pokaż ekran logowania\r\nconst showLoginPage = () => {\r\n    document.getElementById('loginPage').style.display = 'block';\r\n    document.getElementById('dashboard').style.display = 'none';\r\n};\r\n\r\n// Pokaż główny dashboard\r\nconst showDashboard = () => {\r\n    document.getElementById('loginPage').style.display = 'none';\r\n    document.getElementById('dashboard').style.display = 'block';\r\n};\r\n\r\n// Sprawdź stan zalogowania przy załadowaniu strony\r\nwindow.onload = () => {\r\n    if (isLoggedIn()) {\r\n        showDashboard();\r\n    } else {\r\n        showLoginPage();\r\n    }\r\n};\r\n"],"names":["createUser","username","password","response","fetch","method","headers","body","JSON","stringify","ok","errorMessage","text","Error","data","json","console","log","message","error","registerButton","document","getElementById","addEventListener","value","isLoggedIn","localStorage","getItem","showLoginPage","style","display","showDashboard","window","onload"],"version":3,"file":"index.f274b878.js.map"}